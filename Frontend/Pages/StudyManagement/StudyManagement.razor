@page "/studyManagement"
@using Frontend.ViewModels
@using Frontend.Pages.StudyManagement.Components
@using Syncfusion.Blazor.Buttons
@inject NavigationManager NavigationManager
@inherits Blazing.Mvvm.Components.MvvmComponentBase<StudyManagementViewModel>
<CascadingValue Value="@ViewModel" Name="ViewModel">
        <div class="flex-col animate-popIn-normal" style="max-width: 67vw; min-width: 67vw;">
            <div class="flex-row center-v" style="justify-content: space-between !important;min-width: 67vw; max-width: 67vw">
                
                <div class="flex-row center-v animate-popIn-normal">
                    <SfButton Type="button" role="button" CssClass="e-normal flex-col justify-center items-center"
                              OnClick="NavigateToIndex">
                        <SfIcon Name="IconName.ChevronLeft" ></SfIcon>
                    </SfButton>
                    <text class="text-5xl font-semibold text-purple-600 ml-5">Modules</text>
                </div>
                
                <div>
                    @* <Button Type="ButtonType.Outline" Icon="add" Style="margin: 1rem;" *@
                    @*         OnClick="ViewModel.AddModuleButtonHandlerCommand.Execute" Size="ButtonSize.Large"></Button> *@
                    <SfButton Type="button" role="button" CssClass="e-normal flex-col justify-center items-center"
                              OnClick="ViewModel.AddModuleButtonHandlerCommand.Execute">
                        <SfIcon Name="IconName.Plus" ></SfIcon>
                    </SfButton>
                </div>
                
            </div>
            <hr/>
            <div class="scrollable flex-col center-h" style="margin-bottom: 2rem; padding-top: 2rem;">
                @foreach (var (module, index) in ViewModel.Modules.Select((m, i) => (m, i)))
                {
                    <div class="animate-popIn-normal" style="animation-delay: @(0.1 * index)s; opacity: 0">
                        <ModuleOverviewItem Module="@module"></ModuleOverviewItem>
                    </div>
                }
            
                <ModuleOverviewItem Module="@null" Dummy="@true"></ModuleOverviewItem>
            </div>
        </div>
    
    <Drawer Show="@ViewModel.ShowCreateNewModule">
        <div style="min-width: 40rem; max-width: 40rem">
            <CreateModule></CreateModule>
        </div>
    </Drawer>
    
    <Drawer Show="@ViewModel.ShowDeleteModule" OnClose="() => { ViewModel.ShowDeleteModule = false ; }">
        <div style="min-width: 40rem; max-width: 40rem">
            <DeleteModule></DeleteModule>
        </div>
    </Drawer>
</CascadingValue>

@code {
    private void NavigateToIndex()
    {
        NavigationManager.NavigateTo("/");
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        return base.SetParametersAsync(parameters);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        
        if (firstRender)
        {
            ViewModel.FetchModulesCommand.Execute(null);
        }
         await base.OnAfterRenderAsync(firstRender);
    }

}