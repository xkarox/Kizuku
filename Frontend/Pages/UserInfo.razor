@page "/user-info"
@using System.Globalization
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager

@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="center-hv">
    <Animate Type="AnimationType.SlideFade" Duration="0.3s"
             FromY="50px" ToY="0" Ease="EasingType.Ease_Out" Iteration="1" >
        <Card Style="max-width: fit-content;">
            <CardHeader>
                <Text Content="User Information" SizeInRem="3" Weight="FontWeights.W900" GradientColors="@Colors.PrimarySecondary" ShowGradient/>
            </CardHeader>

            <CardContent>
                <div class="flex-col" style="width: 30rem">
                    @if (_user?.Identity?.IsAuthenticated == true)
                    {
                        <div class="flex-col">
                            <Text>Hello, @_user.Identity.Name!</Text>
                            <Text>You are authenticated ✅</Text>
                        </div>

                        <Separator/>

                        <Text>Your current claims:</Text>
                        <ul>
                            @foreach (var claim in _user.Claims)
                            {
                                <li>@claim.Type[(claim.Type.LastIndexOf("/", StringComparison.Ordinal) + 1)..] : @claim.Value</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <Text>You are not authenticated ❌</Text>
                    }
                </div>
            </CardContent>
            <CardFooter>
                <Button Type="ButtonType.Outline" Icon="arrow_back" Style="margin: 1rem"
                        OnClick="BackButtonClicked"></Button>
                <Text Content="@DateTime.Now.ToString(CultureInfo.CurrentCulture)" SizeInRem="1"
                      GradientColors="@Colors.PrimarySecondary" ShowGradient Style="margin: 1rem"/>
            </CardFooter>
        </Card>
    </Animate>
</div>

@code {
    private System.Security.Claims.ClaimsPrincipal? _user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _user = authState.User;
    }
    
    private void BackButtonClicked()
    {
        NavigationManager.NavigateTo("/");
    }
}