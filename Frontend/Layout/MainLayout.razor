@using Frontend.Cookie
@using Frontend.Services.Interfaces
@using Microsoft.AspNetCore.Components.Authorization
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@inherits LayoutComponentBase
@inject IAuthenticationServiceUI AuthServiceUi
@inject NavigationManager NavigationManager

<div >
    <section class="bg-gray-50 dark:bg-gray-950">
        <div>
            <div>
            @* <div class="border border-r-0 border-l-0 border-gray-200 dark:border-gray-600"> *@
                <SfAppBar CssClass="shadow-none ">
                    <div class="px-4 py-5 flex items-center justify-between">
                        <div class="flex items-center" @onclick="NavigateToIndex" style="cursor: pointer;">
                            <img class="mr-3 h-7" src="assets/Logoipsum.svg" alt="company logo" />
                            <span class="text-lg font-semibold text-gray-900 dark:text-white">Kizuku</span>
                        </div>
                        <div class="e-appbar-spacer"></div>
                        <div class="hidden lg:block flex items-center pr-4">
    
                        </div>
                        <div class="flex items-center">
                            <AuthorizeView>
                                <Authorized>
                                    <SfButton Type="button" role="button" @onclick="NavigateToStudyManagement">
                                        Modules
                                    </SfButton>
                                </Authorized>
                            </AuthorizeView>
                            @if (!IsAuthenticationPage())
                            {
                                <AuthorizeView>
                                    <NotAuthorized>
                                        <SfButton Type="button" role="button" @onclick="NavigateToAuthentication">
                                            Login
                                        </SfButton>
                                    </NotAuthorized>
                                    <Authorized>
                                        <SfButton Type="button" role="button" @onclick="HandleLogout">
                                            Logout
                                        </SfButton>
                                    </Authorized>
                                </AuthorizeView>
                            }
                            <AuthorizeView>
                                <Authorized>
                                    <span class="e-avatar e-avatar-small e-avatar-circle" @onclick="NavigateToUserinfo" style="cursor: pointer">
                                        <img src="https://static.vecteezy.com/system/resources/thumbnails/020/765/399/small/default-profile-account-unknown-icon-black-silhouette-free-vector.jpg" alt="profile picture"/>
                                    </span>
                                </Authorized>
                            </AuthorizeView>
                        </div>
                    </div>
                </SfAppBar>
            </div>
        </div>
    </section>
    
    <div style="height: 95vh;" class="center-h">
        @Body
    </div>
</div>

@code
{
    

    private async Task HandleLogout()
    {
        await AuthServiceUi.Logout();
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToAuthentication()
    {
        NavigationManager.NavigateTo("/authentication");
    }
    
    private void NavigateToIndex()
    {
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToStudyManagement()
    {
        NavigationManager.NavigateTo("/studyManagement");
    }

    private void NavigateToUserinfo()
    {
        NavigationManager.NavigateTo("/user-info");
    }
    

    private bool IsAuthenticationPage()
    {
        var uri = new Uri(NavigationManager.Uri);
        return uri.AbsolutePath.Equals("/authentication", StringComparison.OrdinalIgnoreCase);
    }
}